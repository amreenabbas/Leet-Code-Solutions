Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array.

Example 1:

Input: [3,0,1]
Output: 2
Example 2:

Input: [9,6,4,2,3,5,7,0,1]
Output: 8
Note:
Your algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?


//created by js0805

class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int sum = 0;
        int t=0;
        for(auto i :nums)
        {
            if(i==0)
                t++;
            sum+=i;
        }
        if(t==0)
            return 0;
        else
        {
            return (nums.size()*(nums.size()+1)/2)-sum;
        }
        
    }
};
